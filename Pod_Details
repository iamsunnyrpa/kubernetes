apiVersion: v1                       # Specifies the Kubernetes API version being used.
kind: Pod                            # Resource type (Pod in this case). Defines the object type being created.
metadata:                            # Data that helps uniquely identify the object.
  name: techops-pod                  # Unique name for the Pod within its namespace.
  labels:                            # Key/value pairs attached to objects, useful for organizing and selecting subsets of objects.
    app: techops                     # App label, useful for selectors (e.g., grouping Pods belonging to the same application).
    tier: backend                    # Tier label, useful for identifying the application layer (e.g., frontend, backend).
spec:                                # Specification of the desired state for the Pod.
  containers:                        # List of containers running in this Pod.
  - name: techops-container          # Name of the container.
    image: nginx:1.23                # Docker image used for the container.
    ports:                           # List of network ports to expose from the container.
    - containerPort: 80              # Port the container exposes internally.
    env:                             # List of environment variables to set in the container.
    - name: ENV
      value: Production              # Environment variables for configuration.
    volumeMounts:                    # Volumes mounted inside the container.
    - name: config-volume            # Must match the name of a Volume defined in the '.spec.volumes' section.
      mountPath: /usr/share/nginx/html # Path within the container at which the volume should be mounted.
  volumes:                           # List of volumes that can be mounted by containers belonging to the Pod.
  - name: config-volume              # Name of the volume.
    configMap:                       # Specifies the source of the volume is a ConfigMap.
      name: techops-config           # Use ConfigMap as the source. The name of the ConfigMap used for the volume.
  restartPolicy: Always              # Defines the Pod's behavior on container termination. 'Always' means Kubelet restarts the container. Other options: 'OnFailure', 'Never'.
  nodeSelector:                      # Constraints for selecting nodes where the Pod can be scheduled.
    disktype: ssd                    # Schedule only on nodes labeled with 'disktype=ssd'.
  tolerations:                       # Allows scheduling on nodes with matching taints.
  - key: "special-taint"             # The key of the taint to tolerate.
    operator: "Equal"                # The operator to match the taint. Options: 'Equal', 'Exists'.
    value: "true"                    # The value of the taint to tolerate (used with 'Equal' operator).
    effect: "NoExecute"              # The effect of the taint to tolerate. 'NoExecute' means Pods running on the node are evicted if they don't tolerate the taint. Other options: 'NoSchedule', 'PreferNoSchedule'.
  securityContext:                   # Pod-level security settings.
    runAsUser: 1000                  # Run containers with this user ID.
    runAsGroup: 3000                 # Run containers with this primary group ID.
    fsGroup: 2000                    # Group ownership for mounted volumes.
  initContainers:                    # List of containers that run before the main app containers start.
  - name: init-techops               # Name of the init container.
    image: busybox                   # Image for the init container.
    command: ["sh", "-c", "echo Init; sleep 5"] # Entry command executed by the init container.

----------------------------------------------------

apiVersion: Specifies the Kubernetes API version. v1 is the core API group.
kind: Defines the type of Kubernetes object; here, it's a Pod.
metadata: Contains information to identify the Pod, like its name and labels. Labels are key-value pairs used for grouping and selection.
spec: Describes the desired state of the Pod.
containers: Lists the containers running within the Pod. Each container has a name, specifies the image to use, ports to expose, env variables, and volumeMounts.
volumes: Defines storage volumes available to the Pod. Here, a volume named config-volume is created using data from a ConfigMap named techops-config.
volumeMounts: Specifies where the defined volumes (config-volume) should be mounted inside the container (/usr/share/nginx/html).
restartPolicy: Determines if/when containers should be restarted if they terminate. Always is the default.
nodeSelector: Restricts the Pod to run only on nodes with specific labels (here, disktype: ssd).
tolerations: Allows the Pod to be scheduled onto nodes with specific "taints". Taints repel Pods unless they have a matching toleration. This Pod tolerates a taint with key special-taint, value true, and effect NoExecute.
securityContext: Defines security settings for the Pod and its containers, such as the user (runAsUser) and group (runAsGroup, fsGroup) IDs to run as.
initContainers: Containers that run and complete sequentially before the main application containers (spec.containers) start. Useful for setup tasks. Here, an init-techops container runs a simple shell command.